extends ../layout

block variables
  - var activeChapter='footage'
  - var activeSection='list'
block inner-content
  +render-alerts(alerts)
  div.row 
    form.form-horizontal(method="post", data-parsley-validate)
      div.col-xs-12.col-md-6
        input(name="file", type="hidden", required)#file
        div.form-group
          label
            | Title
          input.form-control.input-block(name="title",type="text", required)

      div.col-xs-12.col-md-6
        .resumable-drop.dropzone(ondragenter="jQuery(this).addClass('resumable-dragover');", ondragend="jQuery(this).removeClass('resumable-dragover');", ondrop="jQuery(this).removeClass('resumable-dragover');")
          | Drop video files here to upload or 
          a.resumable-browse
            u select from your computer
        .resumable-progress(style="display: none;")
          a.btn.btn-primary.progress-resume-link(href='#', onclick='r.upload(); return(false);')
            span.glyphicons.glyphicons-play
            | resume
          a.btn.btn-primary.progress-pause-link(href='#', onclick='r.pause(); return(false);')
            i.glyphicons.glyphicons-play
            | pause
          a.btn.btn-danger.progress-cancel-link(href='#', onclick='r.cancel(); return(false);')
            | cancel
        ul.resumable-list
      input.btn.btn-primary.btn-block(type="submit", value="create")


    if footages
      div.footages
        div.row
          each f in footages
            div.col-xs-6.col-md-4.footage
              div.panel.panel-default
                div.panel-body
                  = f.title
                  span= f.file
                  div.row
                    div.col-xs-12.col-md-6
                      a.btn.btn-block.btn-primary
                        i.fa.fa-pencil
                        | edit
                    div.col-xs-12.col-md-6
                      a.btn.btn-block.btn-danger(onclick='deleteFootage(this, "#{f._id}")')
                        i.fa.fa-trash
                        | delete

    script(src="//cdnjs.cloudflare.com/ajax/libs/resumable.js/1.0.2/resumable.min.js")

    script.
      function deleteFootage(el, id) {
        $.ajax({
          type: "DELETE",
          url: "/controlpanel/footage/"+id+"/delete",
          success: function(data) {
            $(el)
              .parents('.footage')
              .hide('slow');
          }
        });
      }


      var r = new Resumable({
        target:'/api/upload/files',
        chunkSize:1*1024*1024,
        simultaneousUploads:1,
        testChunks:false,
        throttleProgressCallbacks:1
      });
      if(!r.support) {
        $('.resumable-error').show();
      } else {
        // Show a place for dropping/selecting files
        $('.resumable-drop').show();
        r.assignDrop($('.resumable-drop')[0]);
        r.assignBrowse($('.resumable-browse')[0]);
        // Handle file add event
        r.on('fileAdded', function(file){
          $('.resumable-drop').hide();
          // Show progress bar
          $('.resumable-progress, .resumable-list').show();
          // Show pause, hide resume
          $('.resumable-progress .progress-resume-link').hide();
          $('.resumable-progress .progress-pause-link').show();
          // Add the file to the list
          $('.resumable-list').append('<li class="resumable-file-'+file.uniqueIdentifier+'">Uploading <span class="resumable-file-name"></span> <span class="resumable-file-progress"></span>');
          $('.resumable-file-'+file.uniqueIdentifier+' .resumable-file-name').html(file.fileName);
          // Actually start the upload
          r.upload();
        });
        r.on('pause', function(){
          // Show resume, hide pause
          $('.resumable-progress .progress-resume-link').show();
          $('.resumable-progress .progress-pause-link').hide();
        });
        r.on('complete', function(){
          // Hide pause/resume when the upload has completed
          $('.resumable-progress').hide();
        });
        r.on('fileSuccess', function(result, message){
          // Reflect that the file upload has completed
          $('.resumable-file-'+result.uniqueIdentifier+' .resumable-file-progress').html('(completed)');
          var message = JSON.parse(message);
          var file = {
            id: result.uniqueIdentifier,
            name: message.fileName,
            original_name: result.file.name,
            size: result.file.size,
            type: result.file.type
          };
          $.ajax({
            type: "POST",
            url: "/controlpanel/footage/file",
            dataType: 'json',
            data: {
              file: JSON.stringify(file)
            },
            success: function(data) {
              // FIXME
              $('input[name="file"]').attr('value', data);
              console.log($('input[name="file"]'));
            }
          });
        });
        r.on('fileError', function(file, message){
          $('.resumable-drop').show();
          // Reflect that the file upload has resulted in error
          $('.resumable-file-'+file.uniqueIdentifier+' .resumable-file-progress').html('(file could not be uploaded: '+message+')');
        });
        r.on('fileProgress', function(file){
          // Handle progress for both the file and the overall upload
          $('.resumable-file-'+file.uniqueIdentifier+' .resumable-file-progress').html(Math.floor(file.progress()*100) + '%');
          $('.progress-bar').css({width:Math.floor(r.progress()*100) + '%'});
        });
        r.on('cancel', function(){
          $('.resumable-drop').show();
          $('.resumable-file-progress').html('canceled');
        });
        r.on('uploadStart', function(){
          // Show pause, hide resume
          $('.resumable-progress .progress-resume-link').hide();
          $('.resumable-progress .progress-pause-link').show();
        });
      }
